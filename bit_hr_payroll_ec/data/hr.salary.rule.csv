active,appears_on_payslip,quantity,Category,condition_select,condition_python,code,account_tax_id/id,amount_python_compute,note,input_ids/id,amount_fix,condition_range,condition_range_max,condition_range_min,name,amount_percentage,amount_percentage_base/id,register_id/id,sequence
True,True,1,Subtotales(),Always True, # Available variables:,NR,,result =categories.EGRE+categories.SUBTOTAL,,,,contract.wage,,,NETO A RECIBIR,,,,300
True,True,1,Ingresos (Genera Beneficios Sociales),Always True, # Available variables:,BASIC,,result = contract.wage * worked_days.WORK100.number_of_days / 30,,,,contract.wage,,,SUELDO BASICO,,,,6
True,True,1,Otros Ingresos (No generan beneficios sociales),Python Expression,result = contract.number_of_year >= 1 and not employee.emp_fondo_reserva,FDRP,,result = (categories.IGBS * 8.33) / 100,,,,contract.wage,,,FONDOS DE RESERVA PAGADOS,,,,50
True,True,1,Otros Ingresos (No generan beneficios sociales),Python Expression,result = contract.number_of_year >= 1 and employee.emp_fondo_reserva,FDRT,,result = (categories.IGBS * 8.33) / 100,,,,contract.wage,,,FONDOS DE RESERVA RETENIDOS,,,,51
True,True,1,Egresos (Egresos del Empleado),Always True, # Available variables:,APIES,,result =-(categories.IGBS * 9.45) / 100,,,,contract.wage,,,APORTE PERSONAL IESS,,,,105
True,True,1,Subtotales(),Always True, # Available variables:,SUBTING,,result = categories.IGBS+categories.OINGNBS,,,,contract.wage,,,SUBTOTAL:Ingresos,,,,200
True,True,1,Provisiones(proviciones),Always True, # Available variables:,D3,,result = (categories.IGBS) / 12,,,,contract.wage,,,DECIMO TERCERO,,,,100
True,True,1,Provisiones(proviciones),Always True, # Available variables:,D4,,result = 354 /12,,,,contract.wage,,,DECIMO CUARTO,,,,101
True,True,1,Provisiones(proviciones),Always True, # Available variables: ,AP,,result =-(categories.IGBS * 9.45) / 100,,,,contract.wage,,,APORTE PATRONAL,,,,102
True,True,1,Provisiones(proviciones),Always True, # Available variables:,IC,,result=(categories.IGBS * 0.5)/100,,,,contract.wage,,,IECE,,,,103
True,True,1,Provisiones(proviciones),Always True, # Available variables:,SE,,result=(categories.IGBS * 0.5)/100,,,,contract.wage,,,SECAP,,,,104
True,True,1,Provisiones(proviciones),Python Expression,result=0  if worked_days.MATERNIDAD:     result=worked_days.MATERNIDAD.number_of_days,IEM,,v_sub=contract.wage*(30-worked_days.MATERNIDAD.number_of_days)/30  result =( v_sub*0.25),,,,contract.wage,,,INCAPACIDAD(por embarazo y maternidad),,,,20
True,True,1,Provisiones(proviciones),Python Expression,result=0  if worked_days.ENFERMEDAD:     result=worked_days.ENFERMEDAD.number_of_days>3,IPE,,v_sub=contract.wage*worked_days.ENFERMEDAD.number_of_days/30 v_50 =v_sub*3/worked_days.ENFERMEDAD.number_of_days v_25 = v_sub*(worked_days.ENFERMEDAD.number_of_days-3)/worked_days.ENFERMEDAD.number_of_days result =(v_50*0.50 )+( v_25*0.25),,,,contract.wage,,,INCAPACIDAD(por enfermedad),,,,21
True,True,1,Provisiones(proviciones),Always True,# Available variables:,IESPAT,,result = (categories.IGBS * 11.15) / 100,,,,contract.wage,,,IESS PATRONAL,,,,90
True,True,1,Provisiones(proviciones),Python Expression,# Available variables:,PROVAC,,result = (categories.IGBS) / 24,,,,contract.wage,,,VACACIONES,,,,106
True,True,1,Otros Ingresos (No generan beneficios sociales),Always True, # Available variables: ,SF,,valor_carga = 3 if employee.cargas_family == '0':         result=0 if employee.cargas_family == '1':         result=valor_carga*1 if employee.cargas_family == '2':         result=valor_carga*2 if employee.cargas_family == '3':         result=valor_carga*3,,,,contract.wage,,,SUBSIDIO FAMILIAR,,,,22
True,True,1,Otros Ingresos (No generan beneficios sociales),Always True, # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10,SA,, # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days. # inputs: object containing the computed inputs.  # Note: returned value have to be set in the variable 'result'  result = contract.wage * 0.10,,,,contract.wage,,,SUBSIDIO POR ANTIGUEDAD,,,,23
True,True,1,Otros Ingresos (No generan beneficios sociales),Python Expression,result=worked_days.BA.number_of_days>0,BA,,result =(worked_days.BA.number_of_days*2.50),,,,contract.wage,,,BONO DE ALIMENTACION,,,,24
True,True,1,Subtotales(),Always True, # Available variables: ,SUBTEGR,,result = categories.EGRE,,,,contract.wage,,,SUBTOTAL:Egresos,,,,201
